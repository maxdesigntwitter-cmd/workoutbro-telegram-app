#!/bin/bash

# Content Reactor - Fixed Architecture Launcher
# –ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–æ–±–ª–µ–º—ã –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏

# –û—Å–Ω–æ–≤–Ω–æ–π –ø—É—Ç—å –∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é
CONTENT_REACTOR_DIR="/Users/imax/Local Sites/workoutbroclub/content_reactor"

echo "üöÄ Content Reactor - Fixed Architecture Launcher"
echo "==============================================="

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
if [ ! -d "$CONTENT_REACTOR_DIR" ]; then
    osascript -e 'display dialog "–û—à–∏–±–∫–∞: –ù–µ –Ω–∞–π–¥–µ–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è Content Reactor." buttons {"OK"} default button "OK" with icon stop'
    exit 1
fi

# –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
cd "$CONTENT_REACTOR_DIR"

# –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–π Python —Å –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π ARM64 –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–æ–π
PYTHON_CMD="arch -arm64 /usr/bin/python3"

echo "üêç –ò—Å–ø–æ–ª—å–∑—É—é —Å–∏—Å—Ç–µ–º–Ω—ã–π Python (ARM64): $($PYTHON_CMD --version)"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ Python —Ä–∞–±–æ—Ç–∞–µ—Ç
if ! $PYTHON_CMD --version &> /dev/null; then
    osascript -e 'display dialog "–û—à–∏–±–∫–∞: Python 3 –Ω–µ –Ω–∞–π–¥–µ–Ω." buttons {"OK"} default button "OK" with icon stop'
    exit 1
fi

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö –ø–∞–∫–µ—Ç–æ–≤
fix_architecture() {
    echo "üîß –ò—Å–ø—Ä–∞–≤–ª—è—é –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É –ø–∞–∫–µ—Ç–æ–≤..."
    
    # –°–ø–∏—Å–æ–∫ –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö –ø–∞–∫–µ—Ç–æ–≤
    PROBLEMATIC_PACKAGES=(
        "pydantic"
        "pydantic-core" 
        "rpds-py"
        "jsonschema"
        "jsonschema-specifications"
        "attrs"
        "referencing"
    )
    
    for package in "${PROBLEMATIC_PACKAGES[@]}"; do
        echo "üîÑ –ü–µ—Ä–µ—É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é $package..."
        $PYTHON_CMD -m pip uninstall "$package" -y --quiet
        $PYTHON_CMD -m pip install "$package" --user --force-reinstall --quiet
    done
    
    echo "‚úÖ –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞!"
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
if ! $PYTHON_CMD -c "import streamlit" &> /dev/null; then
    osascript -e 'display notification "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏..." with title "Content Reactor"'
    echo "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏..."
    $PYTHON_CMD -m pip install -r requirements.txt --quiet --user
    if [ $? -ne 0 ]; then
        osascript -e 'display dialog "–û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π." buttons {"OK"} default button "OK" with icon stop'
        exit 1
    fi
    osascript -e 'display notification "–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!" with title "Content Reactor"'
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º Google Generative AI
if ! $PYTHON_CMD -c "import google.generativeai" &> /dev/null; then
    osascript -e 'display notification "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é Google AI..." with title "Content Reactor"'
    echo "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é Google Generative AI..."
    $PYTHON_CMD -m pip install google-generativeai --quiet --user
    if [ $? -ne 0 ]; then
        osascript -e 'display notification "–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: Google AI –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω" with title "Content Reactor"'
    fi
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É –∏ –∏—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
if ! $PYTHON_CMD -c "import pydantic" &> /dev/null; then
    osascript -e 'display notification "–ò—Å–ø—Ä–∞–≤–ª—è—é –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É..." with title "Content Reactor"'
    fix_architecture
fi

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∑–∞–ø—É—Å–∫–µ
osascript -e 'display notification "–ó–∞–ø—É—Å–∫–∞—é Content Reactor..." with title "Content Reactor"'

# –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
$PYTHON_CMD run.py

# –ï—Å–ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–∫—Ä—ã–ª–æ—Å—å, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
osascript -e 'display notification "Content Reactor –∑–∞–∫—Ä—ã—Ç" with title "Content Reactor"'







