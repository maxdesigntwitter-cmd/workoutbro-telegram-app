// –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞—è–≤–∫–∏ –∞–¥–º–∏–Ω—É —á–µ—Ä–µ–∑ HTTP
async function sendApplicationToAdmin(userId, username, answers) {
  const adminId = 285485174; // –í–∞—à ID –∫–∞–∫ –∞–¥–º–∏–Ω–∞
  const botToken = '8209346537:AAGKLa-x1zZR0Htp-DlOVjVvUx0L81b8aik';
  
  console.log(`Sending application to admin ID: ${adminId}`);
  console.log(`From user ID: ${userId}`);
  
  const applicationMessage = `üìù **–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ PRO MODE**\n\nüë§ **–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:** @${username} (ID: ${userId})\n\nüìã **–î–∞–Ω–Ω—ã–µ –∑–∞—è–≤–∫–∏:**\n\n1Ô∏è‚É£ **–§–∏—Ç–Ω–µ—Å —É—Ä–æ–≤–µ–Ω—å:** ${answers.question_1}\n2Ô∏è‚É£ **–ß–∞—Å—Ç–æ—Ç–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫:** ${answers.question_2}\n3Ô∏è‚É£ **–¶–µ–ª–∏:** ${answers.question_3}\n4Ô∏è‚É£ **–û–ø—ã—Ç:** ${answers.question_4}\n5Ô∏è‚É£ **–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:** ${answers.question_5}\n\nüí¨ **–°–≤—è–∑–∞—Ç—å—Å—è —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º:** [–ù–∞–ø–∏—Å–∞—Ç—å](tg://user?id=${userId})`;
  
  const keyboard = {
    inline_keyboard: [
      [{ text: 'üí¨ –ù–∞–ø–∏—Å–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é', url: `tg://user?id=${userId}` }],
      [{ text: '‚úÖ –û–¥–æ–±—Ä–∏—Ç—å –∑–∞—è–≤–∫—É', callback_data: `approve_${userId}` }],
      [{ text: '‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å –∑–∞—è–≤–∫—É', callback_data: `reject_${userId}` }]
    ]
  };
  
  const payload = {
    chat_id: adminId, // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞–¥–º–∏–Ω—É
    text: applicationMessage,
    parse_mode: 'Markdown',
    reply_markup: keyboard
  };
  
  console.log('Payload:', JSON.stringify(payload, null, 2));
  
  try {
    const response = await fetch(`https://api.telegram.org/bot${botToken}/sendMessage`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify(payload)
    });
    
    const result = await response.json();
    console.log('Response:', JSON.stringify(result, null, 2));
    
    if (result.ok) {
      console.log(`‚úÖ Admin notification sent for user ${userId}, message ID: ${result.result.message_id}`);
      return true;
    } else {
      console.log(`‚ùå Error sending admin notification: ${result.description}`);
      return false;
    }
  } catch (error) {
    console.log(`‚ùå Error sending admin notification: ${error.message}`);
    return false;
  }
}

module.exports = { sendApplicationToAdmin };
